/*
  Description: Performs an insertion sort using the C- language.
*/

int x[20];

int continueSorting (int a[], int index, int temp)
{
	int keepGoing;

	if (index >= 1)
	{
		keepGoing = 1;
	}
	else if (temp < x[index - 1])
	{
		keepGoing = 1;
	}
	else
	{
		keepGoing = 0;
	}

	return keepGoing;
}

void 
sort (int a[], int size)
{
	int temp;
	int currentIndex;
	int index;
	int keepGoing;

	keepGoing = 1;
	currentIndex = 1;

	while (currentIndex < size)
	{
		temp = x[currentIndex];
		index = currentIndex;


		
		while (keepGoing == 1)
		{
			keepGoing = continueSorting (x, index, temp);
			x[index] = x[index -1];
			index = index - 1;
			output(x[index]);
		}

		keepGoing = 1;
		x[index] = temp;
		currentIndex = currentIndex + 1;
	}
}

void 
main (void)
{
	int size;
	int i;
	int num;

	size = 20;
	i = size;
	num = 0;

  /* Add some numbers in reverse order to sort. */

	x[0] = 45;
	x[1] = 2345;
	x[2] = 3;
	x[3] = 54;
	x[4] = 88;
	x[5] = 9;
	x[6] = 15;
	x[7] = 20;
	x[8] = 8;
	x[9] = 2;
	x[10] = 76;
	x[11] = 45;
	x[12] = 123;
	x[13] = 875;
	x[14] = 346;
	x[15] = 21;
	x[16] = 22;
	x[17] = 47;
	x[18] = 75;
	x[19] = 25;


	i = 0;
	while (i < size)
	{
		output (x[i]);
		i = i + 1;
	}

	sort (x, size);

	i = 0;
	while (i < size)
	{
		output (x[i]);
		i = i + 1;
	}
}